# The App Context includes the following information derived from GitHub Context:
#
# - App Version:
#     - The version tag is recorded in Git / version file when code is integrated into the mainline.
#     - For PRs, the version will be a string in the format `<next semver tag>-<pr hash>`.
#       - PRs do not dispatch tags.
#       - The PR hash is recorded in Git history and can be used as a reference to check out a code snapshot.
# - App Branch:
#     - Name of the branch that runs this workflow.
# - App SHA:
#     - Git hash recorded in history.
#     - For PRs: This is the commit hash of the PR changes when the PR is opened, updated with merge commit, or updated with rebase.
#     - For Push: This is the commit hash that results from merging the PR changes into the base (mainline) branch.
# - App Short SHA:
#     - First 7 characters of App SHA.
# - PART:
#     - The part of the version which was bumped.
# - Repository name:
#     - The name of the GitHub repository where the action is running.
# - Repository owner:
#     - The owner of the GitHub repository.
# - Repository URL:
#     - The URL to the GitHub repository.
# - Version file path:
#     - The version file within the repository where the app version is specified.
# - Version line pattern:
#     - The regex pattern used to identify the version line in the version file.
# - Version line match:
#     - The matched version line captured from the version file based on the specified pattern.
#
# After successfully running this action, the following environment variables are available for use in subsequent steps within the same job:
#
# - APP_VERSION
# - APP_BRANCH
# - APP_SHA
# - APP_SHORT_SHA
# - PART
# - REPOSITORY_NAME
# - REPOSITORY_OWNER
# - REPOSITORY_URL
# - VERSION_FILE_PATH
# - VERSION_LINE_PATTERN
# - VERSION_LINE_MATCH
#
# Additionally, the step will output the following variables for use in subsequent steps or jobs:
#
# - app_version
# - app_branch
# - app_sha
# - app_short_sha
# - part
# - repository_name
# - repository_owner
# - repository_url
# - version_file_path
# - version_line_pattern
# - version_line_match
#
name: Determine App Context
description: 'Determine the app context from artifacts or version file based on the GitHub Context (PR or mainline merge).'
inputs:
  gh_repo:
    description: 'GitHub repository being used: owner/repository'
    required: true
  max_retries:
    description: 'Maximum number of retries'
    required: false
    default: '15'
  sleep_time:
    description: 'Sleep time between retries in seconds'
    required: false
    default: '5'
outputs:
  app_version:
    description: 'The context-dependent app version'
    value: ${{ steps.app-context.outputs.APP_VERSION }}
  app_branch:
    description: 'The context-dependent app branch'
    value: ${{ steps.app-context.outputs.APP_BRANCH }}
  app_sha:
    description: 'The context-dependent app sha'
    value: ${{ steps.app-context.outputs.APP_SHA}}
  app_short_sha:
    description: 'The context-dependent app sha (short version)'
    value: ${{ steps.app-context.outputs.APP_SHORT_SHA}}
  part:
    description: 'The semver bump mode used for calculating the app version: major, minor, patch'
    value: ${{ steps.app-context.outputs.PART}}
  repository_name:
    description: 'The name of the GitHub repository where the action is running'
    value: ${{ steps.app-context.outputs.REPOSITORY_NAME}}
  repository_owner:
    description: 'The owner of the GitHub repository'
    value: ${{ steps.app-context.outputs.REPOSITORY_OWNER}}
  repository_url:
    description: 'The URL to the GitHub repository'
    value: ${{ steps.app-context.outputs.REPOSITORY_URL}}
  version_file_path:
    description: 'The version file within the repository where the app version is specified'
    value: ${{ steps.app-context.outputs.VERSION_FILE_PATH}}
  version_line_pattern:
    description: 'The regex pattern used to identify the version line in the version file'
    value: ${{ steps.app-context.outputs.VERSION_LINE_PATTERN}}
  version_line_match:
    description: 'The matched version line captured from the version file based on the specified pattern'
    value: ${{ steps.app-context.outputs.VERSION_LINE_MATCH}}

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}
        token: ${{ env.GITHUB_TOKEN }}

    - id: app-context
      name: App Context
      run: ./scripts/ci-hooks/get-app-context.sh
      shell: bash
      env:
        GITHUB_REPO: ${{ inputs.gh_repo }}
        GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
        MAX_RETRIES: ${{ inputs.max_retries }}
        SLEEP_TIME: ${{ inputs.sleep_time }}
