-- liquibase formatted sql

-- changeset dhite:1655415334398-4
CREATE TABLE "public"."entity_type" ("id" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "name" VARCHAR NOT NULL, "workspace_id" UUID NOT NULL, "full_text_indexed" BOOLEAN DEFAULT FALSE NOT NULL, CONSTRAINT "entity_type_pkey" PRIMARY KEY ("id"));

-- changeset dhite:1655415334398-5
CREATE TABLE "public"."entity" ("entity_type" BIGINT NOT NULL, "record_version" INTEGER NOT NULL, "name" VARCHAR NOT NULL, "deleted" BOOLEAN NOT NULL, "attributes" JSONB NOT NULL, CONSTRAINT "entity_pkey" PRIMARY KEY ("entity_type", "name"));

-- changeset dhite:1655415334398-6 splitStatements:false
CREATE OR REPLACE FUNCTION "public".entity_update()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
BEGIN
    if(OLD.attributes != NEW.attributes) then
        with q as (select string_agg(value, ' ') as attrs, array_agg(key) as attr_names from jsonb_each_text(NEW.attributes))
update entity_attribute_info set entity_attribute_values = q.attrs, entity_attribute_names = q.attr_names
    from q
where entity_type = NEW.entity_type and entity_name = NEW.name;
end if;
RETURN NEW;
END;
$function$;

-- changeset dhite:1655415334398-7 splitStatements:false
CREATE OR REPLACE FUNCTION "public".entity_insert()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
BEGIN
with q as (select string_agg(value, ' ') as attrs, array_agg(key) as attr_names from jsonb_each_text(NEW.attributes))
insert into entity_attribute_info (entity_type, entity_name, entity_attribute_values, entity_attribute_names)
select NEW.entity_type, NEW.name, q.attrs, q.attr_names from q;
RETURN NEW;
END;
$function$;

-- changeset dhite:1655415334398-8
CREATE TABLE "public"."workspace" ("id" UUID NOT NULL, "name" VARCHAR NOT NULL, "namespace" VARCHAR NOT NULL, CONSTRAINT "workspace_pkey" PRIMARY KEY ("name", "namespace"));

-- changeset dhite:1655415334398-9
CREATE TABLE "public"."entity_attribute_info" ("entity_type" BIGINT NOT NULL, "entity_name" VARCHAR NOT NULL, "entity_attribute_values" VARCHAR, "entity_attribute_names" VARCHAR[] DEFAULT ARRAY[]::character varying[] NOT NULL, CONSTRAINT "entity_attribute_concat_pkey" PRIMARY KEY ("entity_type", "entity_name"));

-- changeset dhite:1655415334398-87
CREATE UNIQUE INDEX "uniq_ws" ON "public"."workspace"("id");

-- changeset dhite:1655415334398-92
CREATE TABLE "public"."entity_reference" ("entity_type" BIGINT NOT NULL, "entity_name" VARCHAR NOT NULL, "referenced_entity_type" BIGINT NOT NULL, "referenced_entity_name" VARCHAR NOT NULL, CONSTRAINT "entity_reference_pkey" PRIMARY KEY ("entity_type", "entity_name", "referenced_entity_type", "referenced_entity_name"));

-- changeset dhite:1655415334398-154 splitStatements:false
CREATE TRIGGER entity_insert AFTER INSERT ON "public".entity FOR EACH ROW EXECUTE FUNCTION entity_insert();

-- changeset dhite:1655415334398-155 splitStatements:false
CREATE TRIGGER entity_update AFTER UPDATE ON "public".entity FOR EACH ROW EXECUTE FUNCTION entity_update();

-- changeset dhite:1655415334398-156
ALTER TABLE "public"."entity_attribute_info" ADD CONSTRAINT "entity_fk" FOREIGN KEY ("entity_type", "entity_name") REFERENCES "public"."entity" ("entity_type", "name") ON UPDATE NO ACTION ON DELETE NO ACTION;

-- changeset dhite:1655415334398-157
ALTER TABLE "public"."entity_reference" ADD CONSTRAINT "entity_reference_fk" FOREIGN KEY ("referenced_entity_type", "referenced_entity_name") REFERENCES "public"."entity" ("entity_type", "name") ON UPDATE NO ACTION ON DELETE NO ACTION;

-- changeset dhite:1655415334398-158
ALTER TABLE "public"."entity" ADD CONSTRAINT "type_reference_fk" FOREIGN KEY ("entity_type") REFERENCES "public"."entity_type" ("id") ON UPDATE NO ACTION ON DELETE NO ACTION;

-- changeset dhite:1655415334398-159
ALTER TABLE "public"."entity_type" ADD CONSTRAINT "ws_reference_fk" FOREIGN KEY ("workspace_id") REFERENCES "public"."workspace" ("id") ON UPDATE NO ACTION ON DELETE NO ACTION;

-- changeset dhite:1655415334398-160
insert into workspace (id, name, namespace) values ('15f36863-30a5-4cab-91f7-52be439f1175', 'test', 'default')
