package org.databiosphere.workspacedataservice.shared.model;

import java.util.Objects;
import org.springframework.lang.NonNull;
import org.springframework.lang.Nullable;

/**
 * Record class to represent an auth token; use this instead of String for more type safety and
 * readability of argument lists. As of this writing, WDS includes both Nimbus and Apache Oltu as
 * transitive dependencies, and both of those libraries include models to represent a token; but
 * they also both have more complexity than we need, and we don't want to depend too much on
 * transitive dependencies
 */
public class BearerToken {

  private final String value;

  private BearerToken(@Nullable String value) {
    this.value = value;
  }

  /** returns an empty BearerToken; that is, a BearerToken whose `value` is null */
  public static BearerToken empty() {
    return new BearerToken(/* value= */ null);
  }

  /** returns a BearerToken with the specified `value` */
  public static BearerToken ofNullable(@Nullable String val) {
    return new BearerToken(val);
  }

  /** returns a BearerToken with the specified `value` */
  public static BearerToken of(@NonNull String val) {
    return ofNullable(val);
  }

  @Nullable
  public String getValue() {
    return value;
  }

  /** indicates if this BearerToken is empty; that is, has a null `value` */
  public boolean isEmpty() {
    return value == null;
  }

  /** indicates if this BearerToken is not empty; that is, has a non-null `value` */
  public boolean nonEmpty() {
    return !isEmpty();
  }

  // generated by IntelliJ
  @Override
  public boolean equals(Object o) {
    if (this == o) return true;
    if (o == null || getClass() != o.getClass()) return false;
    BearerToken that = (BearerToken) o;
    return Objects.equals(value, that.value);
  }
}
