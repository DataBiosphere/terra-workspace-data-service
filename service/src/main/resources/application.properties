# These values are used more than once, so we'll set them here with appropriate defaults
env.wds.db.name=${WDS_DB_NAME:wds}
env.wds.db.user=${WDS_DB_USER:wds}
env.wds.db.password=${WDS_DB_PASSWORD:wds}
env.wds.db.host=${WDS_DB_HOST:localhost}
env.wds.db.port=${WDS_DB_PORT:5432}
# When running on Azure in k8s with workload identity set ADDITIONAL_JDBC_URL_PARAMS to
# sslmode=require&authenticationPluginClassName=com.azure.identity.extensions.jdbc.postgresql.AzurePostgresqlAuthenticationPlugin
env.wds.db.additionalUrlParams=${ADDITIONAL_JDBC_URL_PARAMS:}

management.endpoints.enabled-by-default=false
management.endpoint.info.enabled=true
management.endpoint.health.enabled=true
management.endpoint.health.probes.enabled=true
management.endpoints.web.exposure.include=info,health
management.endpoints.web.base-path=/
management.endpoints.web.path-mapping.info=version
management.endpoints.web.path-mapping.health=status
management.endpoint.health.show-details=ALWAYS
management.endpoint.health.group.liveness.include=livenessState,db

# additional keys to expose in the actuator info endpoint:
management.info.env.enabled=true
info.app.chart-version=${HELM_CHART:unknown}
info.app.image=${WDS_IMAGE:unknown}

spring.datasource.hikari.jdbc-url=jdbc:postgresql://${env.wds.db.host}:${env.wds.db.port}/${env.wds.db.name}?reWriteBatchedInserts=true&${env.wds.db.additionalUrlParams}
spring.datasource.hikari.username=${env.wds.db.user}
spring.datasource.hikari.password=${env.wds.db.password}
spring.datasource.hikari.maximum-pool-size=7
spring.datasource.hikari.minimum-idle=7

# set hikari logging to DEBUG or even TRACE to troubleshoot connection pool issues
logging.level.com.zaxxer.hikari.HikariConfig=INFO
logging.level.com.zaxxer.hikari=INFO

# Ensure data.sql is NOT run on startup
spring.sql.init.mode=never
# Run Liquibase instead
spring.liquibase.change-log=classpath:liquibase/changelog.yaml

server.error.include-stacktrace=never
server.error.include-message=always

spring.servlet.multipart.max-request-size=5GB
spring.servlet.multipart.max-file-size=5GB

spring.cache.jcache.config=classpath:ehcache.xml

twds.write.batch.size=5000
twds.streaming.fetch.size=5000

# Workspace Id for launching instance
twds.instance.workspace-id=${WORKSPACE_ID:}
twds.instance.source-workspace-id=${SOURCE_WORKSPACE_ID:}
# short-lived credentials to use during cloning
twds.startup-token=${STARTUP_TOKEN:}
# dump the properties loaded from this file (as seen and configured by the framework) during boot
twds.dump-properties=${DUMP_PROPERTIES:false}

twds.pg_dump.path=${PGDUMP_PATH:/usr/bin/pg_dump}
twds.pg_dump.psqlPath=${PSQL_PATH:/usr/bin/psql}
twds.pg_dump.port=${env.wds.db.port}
twds.pg_dump.user=${env.wds.db.user}
twds.pg_dump.dbName=${env.wds.db.name}
twds.pg_dump.password=${env.wds.db.password}
twds.pg_dump.host=${env.wds.db.host}
# When running on Azure in k8s with workload identity set PGDUMP_USE_AZURE_IDENTITY to true
twds.pg_dump.useAzureIdentity=${PGDUMP_USE_AZURE_IDENTITY:true}

sentry.dsn=https://e59ecdd940784bd2922f25a0f3197ffd@o54426.ingest.sentry.io/4504299946835968
sentry.samurl=${SAM_URL:}
sentry.mrg=${LZ_MRG:}
sentry.releasename=${RELEASE_NAME:}

sam.retry.maxAttempts=5
sam.retry.backoff.delay=500
sam.retry.backoff.multiplier=1.5

api.retry.maxAttempts=10
api.retry.backoff.delay=150
api.retry.backoff.multiplier=1.5

datarepourl=${DATA_REPO_URL:}
workspacemanagerurl=${WORKSPACE_MANAGER_URL:}
leoUrl=${LEONARDO_URL:}

# activate the "local" profile to turn on CORS response headers,
# which may be necessary for local development.
# spring.profiles.active=local

