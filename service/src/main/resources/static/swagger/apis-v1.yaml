# This file contains only the v1 WDS APIs.
# Our server-stub generator can target this file and this file only, to avoid generating
# v0.2 stubs we aren't using.externalDocs:
#
# The APIs and models in this file **must** also be included, via $ref, in openapi-docs.yaml
# to present both the v0.2 and v1 APIs to the swagger-ui.

openapi: 3.0.3

info:
  title: Workspace Data Service
  version: v1

tags:
  # Tags should be listed in the order they should appear in the UI
  - name: Import
    description: Import APIs
  - name: Job
    description: Job APIs
  - name: Capabilities
    description: Describes the features of WDS
  - name: Collections #TODO get this to show up in the correct place
    description: Collection APIs

paths:
  ##############################
  # Import APIs
  ##############################
  /{instanceUuid}/import/v1:
    post:
      summary: Import from a file
      description: Imports records from the specified URL.
      operationId: importV1
      security:
        - bearerAuth: [ ]
      tags:
        - Import
      parameters:
        - $ref: '#/components/parameters/instanceUuidPathParam'
      requestBody:
        description: A request to import records from a file
        required: true
        content:
          application/json:
            schema:
              type: object
              title: ImportRequest
              required:
                - type
                - url
              properties:
                type:
                  type: string
                  enum: [ PFB, TDRMANIFEST ]
                  description: format of file to import
                url:
                  type: string
                  format: uri
                  description: url from which to import
                options:
                  type: object
                  additionalProperties: true
                  description: key-value pairs to configure this import. Options vary based on the import file type.
      responses:
        202:
          description: Import accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericJob'

  ##############################
  # Job APIs
  ##############################
  /job/v1/{jobId}:
    get:
      summary: Get status of a long-running job.
      operationId: jobStatusV1
      security:
        - bearerAuth: [ ]
      tags:
        - Job
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Job completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericJob'
        202:
          description: Job still running.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericJob'
  /job/v1/instance/{instanceUuid}:
    get:
      summary: Get all jobs with a certain status under a particular instance.
      operationId: jobsInInstanceV1
      security:
        - bearerAuth: [ ]
      tags:
        - Job
      parameters:
        - $ref: '#/components/parameters/instanceUuidPathParam'
        - name: statuses
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              enum: [ CREATED, QUEUED, RUNNING, SUCCEEDED, ERROR, CANCELLED, UNKNOWN ]
      responses:
        200:
          description: A list of jobs with specified status for Instance Id.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GenericJob'
  ##############################
  # Capabilities APIs
  ##############################
  /capabilities/v1:
    get:
      summary: Describes the capabilities of this WDS version.
      operationId: capabilities
      tags:
        - Capabilities
      responses:
        200:
          description: key-value pairs describing capabilities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Capabilities'
  ##############################
  # Collection APIs
  ##############################
  /collections:
    get:
      summary: List collections
      description: List all collections in this server.
      operationId: listCollectionsV1
      tags:
        - Collections
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
  /collections/{collectionId}:
    post:
      summary: Create a collection
      description: Create a collection with the given UUID.
      operationId: createCollectionV1
      security:
        - bearerAuth: [ ]
      tags:
        - Collections
      parameters:
        - $ref: '#/components/parameters/collectionUuidPathParam'
      responses:
        201:
          description: Success
        409:
          description: Conflict - schema already exists.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a collection
      description: |
        Delete the collection with the given UUID. This API is liable to change.

        THIS WILL DELETE ALL DATA WITHIN THE COLLECTION. Be certain this is what you want to do.
      operationId: deleteCollectionV1
      security:
        - bearerAuth: [ ]
      tags:
        - Collections
      parameters:
        - $ref: '#/components/parameters/collectionUuidPathParam'
      responses:
        200:
          description: Success
        404:
          description: Not Found - collection does not exist.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  # within each group, components should be listed alphabetically.
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

  parameters:
    # instanceUuidPathParam is very close to duplicating instanceIdPathParam from v0.2,
    # but this one specifies format: uuid, which creates Java UUID objects in generated
    # code instead of a String.
    instanceUuidPathParam:
      name: instanceUuid
      in: path
      description: WDS instance id; by convention equal to workspace id
      required: true
      schema:
        type: string
        format: uuid
    # TODO will likely remove instanceUuidPathParam in favor of collectionUuidPathParam
    collectionUuidPathParam:
      name: collectionUuid
      in: path
      description: WDS collection id; by convention equal to workspace id
      required: true
      schema:
        type: string
        format: uuid
    collectionIdPathParam:
      name: collectionId
      in: path
      description: WDS collection id; by convention equal to workspace id
      required: true
      schema:
        type: string

  schemas:
    Capabilities:
      type: object
      properties:
        capabilities:
          type: boolean
      additionalProperties:
        type: boolean
    GenericJob:
      x-all-of-name: GenericJob
      description: |
        Generic representation of a job, no opinion on inputs and result for the job.
        See individual APIs for more guidance on expected input and result payloads.
      allOf:
        - $ref: '#/components/schemas/JobV1'
        - type: object
          properties:
            input:
              type: object
              description: Input arguments for this job
            result:
              type: object
              description: Result of this job
    JobV1:
      type: object
      required:
        - jobId
        - jobType
        - status
        - created
        - updated
        - instanceId
      properties:
        jobId:
          type: string
          format: uuid
        jobType:
          type: string
          enum: [ DATA_IMPORT, UNKNOWN ]
        instanceId:
          type: string
          format: uuid
        status:
          type: string
          enum: [ CREATED, QUEUED, RUNNING, SUCCEEDED, ERROR, CANCELLED, UNKNOWN ]
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        errorMessage:
          type: string
    ErrorResponse: #TODO how to not duplicate this from openapi-docs.yaml
      required:
        - status
        - path
        - message
        - error
        - timestamp
      type: object
      properties:
        status:
          type: integer
          description: HTTP status code
        error:
          type: string
          description: error
        message:
          type: string
          description: error message
        path:
          type: string
          description: requested record path
        timestamp:
          type: string
          description: time of error
      description: ""
